"""B. Великое Лайнландское переселение

Есть массив городов a, который хранит стоимость жизни.
Люди хотят переехать направо в первый более дешёвый город.

Задача: определить для каждого ai индекс переселения
Если более дешёвого города справа нет, то -1
"""


# Размышления
# Мы можем запоминать каждый текущий город в стек
# Если текущий город меньше того, что лежит на вершине стека,
# то выпихиваем вершину из стека
# В итоге в стеке будут лежать упорядоченные в порядке возрастания значения

def migration(a: list[int]) -> list[int]:
    answer = [-1] * len(a)
    stack = []
    for i, cost in enumerate(a):
        # Проверяем, является ли текущий город ответом для кого-то ранее
        while stack and stack[-1][0] > cost:
            (_, idx) = stack.pop()
            answer[idx] = i
        # После кладём цену и индекс на будущее
        stack.append((cost, i))
    return answer


_ = input()
a = list(map(int, input().split()))
print(*migration(a))
