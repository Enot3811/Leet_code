"""B. Майки и носки

Как известно, осенью и зимой светает поздно, и так хочется утром ещё хоть
немного поспать, а не идти в школу! Некоторые школьники готовы даже одеваться,
не открывая глаз, лишь бы отложить момент пробуждения. Вот и Саша решил,
что майку и носки он вполне может вытащить из шкафа на ощупь с закрытыми
глазами и только потом включить свет и одеться. В шкафу у Саши есть два ящика.
В одном из них лежит A синих и B красных маек, в другом — C синих и D красных
пар носков. Саша хочет, чтобы и майка, и носки были одного цвета.
Он вслепую вытаскивает M маек и N пар носков. В первое же утро Саша задумался,
какое минимальное суммарное количество предметов одежды (M + N) он должен
вытащить, чтобы среди них гарантированно оказались майка и носки одного цвета.
Какого именно цвета окажутся предметы одежды, для Саши совершенно неважно.

Формат ввода
На вход программе подаются четыре целых неотрицательных числа A, B, C, D,
записанных в отдельных строках: 
A — количество синих маек, 
B — количество красных маек, 
C — количество синих носков, 
D — количество красных носков. Все числа не превосходят 10^9.
Гарантируется, что в шкафу есть одноцветный комплект из майки и носков.

Формат вывода
Программа должна вывести два числа: количество маек M и количество пар носков 
N, которые должен взять Саша. Необходимо, чтобы среди M маек и N пар носков
обязательно нашлась одноцветная пара,
при этом сумма M+N должна быть минимальной.

Пример:
Ввод:
6
2
7
3

Вывод:
3 4
"""


def shirts_and_socks(b_shirts, r_shirts, b_socks, r_socks):
    b_sum = b_shirts + 1 + b_socks + 1
    r_sum = r_shirts + 1 + r_socks + 1
    if (b_sum < r_sum or b_shirts == 0 or b_socks == 0) and (r_shirts != 0 and r_socks != 0):  # В красное
        return b_shirts + 1, b_socks + 1
    else:  # В синее
        return r_shirts + 1, r_socks + 1


tests = [
    ((6, 2, 7, 3), (3, 4)),
    ((1, 1, 1, 1), (2, 2)),
    ((1, 5, 7, 1), (6, 2)),
    ((0, 6, 10, 1), (1, 11)),
    ((6, 0, 1, 10), (1, 11)),
    ((1, 10, 5, 11), (2, 6)),
    ((10, 0, 10, 0), (1, 1)),
    ((0, 10, 0, 10), (1, 1))
]

for inp, ans in tests:
    res = shirts_and_socks(*inp)
    print(inp, res, ans)
